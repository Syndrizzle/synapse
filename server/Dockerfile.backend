FROM node:18-alpine

WORKDIR /app

# Define build arguments for all environment variables
ARG NODE_ENV
ARG HOST
ARG PORT
ARG OPENROUTER_API_KEY
ARG OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
ARG OPENROUTER_MODEL
ARG PDF_PROCESSING_ENGINE
ARG REDIS_URL=redis://localhost:6379
ARG REDIS_CONNECT_TIMEOUT=10000
ARG REDIS_COMMAND_TIMEOUT=5000
ARG REDIS_RETRY_ATTEMPTS=3
ARG MIN_QUIZ_LENGTH=5
ARG MAX_QUIZ_LENGTH=50
ARG MAX_FILE_SIZE=10485760
ARG MAX_FILES_COUNT=5
ARG ALLOWED_FILE_TYPES=application/pdf
ARG ENABLE_RATE_LIMITING=true
ARG RATE_LIMIT_REQUESTS=100
ARG RATE_LIMIT_WINDOW_MINUTES=15
ARG RATE_LIMIT_REQUESTS_AUTHORIZED=1000
ARG RATE_LIMIT_WINDOW_MINUTES_AUTHORIZED=5
ARG CORS_ORIGINS
ARG AUTHORIZED_DOMAINS
ARG MAX_REQUEST_SIZE
ARG LOG_LEVEL=info
ARG ENABLE_FILE_LOGGING=false
ARG LOG_FILE_PATH=./logs/server.log
ARG MCQ_TEMPERATURE=0.3
ARG MCQ_MAX_TOKENS=4000
ARG DEBUG_MODE=false
ARG ENABLE_HEALTH_CHECK=true
ARG HEALTH_CHECK_PATH=/health

# Set environment variables from build arguments
ENV NODE_ENV=$NODE_ENV
ENV HOST=$HOST
ENV PORT=$PORT
ENV OPENROUTER_API_KEY=$OPENROUTER_API_KEY
ENV OPENROUTER_BASE_URL=$OPENROUTER_BASE_URL
ENV OPENROUTER_MODEL=$OPENROUTER_MODEL
ENV PDF_PROCESSING_ENGINE=$PDF_PROCESSING_ENGINE
ENV REDIS_URL=$REDIS_URL
ENV REDIS_CONNECT_TIMEOUT=$REDIS_CONNECT_TIMEOUT
ENV REDIS_COMMAND_TIMEOUT=$REDIS_COMMAND_TIMEOUT
ENV REDIS_RETRY_ATTEMPTS=$REDIS_RETRY_ATTEMPTS
ENV MIN_QUIZ_LENGTH=$MIN_QUIZ_LENGTH
ENV MAX_QUIZ_LENGTH=$MAX_QUIZ_LENGTH
ENV MAX_FILE_SIZE=$MAX_FILE_SIZE
ENV MAX_FILES_COUNT=$MAX_FILES_COUNT
ENV ALLOWED_FILE_TYPES=$ALLOWED_FILE_TYPES
ENV ENABLE_RATE_LIMITING=$ENABLE_RATE_LIMITING
ENV RATE_LIMIT_REQUESTS=$RATE_LIMIT_REQUESTS
ENV RATE_LIMIT_WINDOW_MINUTES=$RATE_LIMIT_WINDOW_MINUTES
ENV RATE_LIMIT_REQUESTS_AUTHORIZED=$RATE_LIMIT_REQUESTS_AUTHORIZED
ENV RATE_LIMIT_WINDOW_MINUTES_AUTHORIZED=$RATE_LIMIT_WINDOW_MINUTES_AUTHORIZED
ENV CORS_ORIGINS=$CORS_ORIGINS
ENV AUTHORIZED_DOMAINS=$AUTHORIZED_DOMAINS
ENV MAX_REQUEST_SIZE=$MAX_REQUEST_SIZE
ENV LOG_LEVEL=$LOG_LEVEL
ENV ENABLE_FILE_LOGGING=$ENABLE_FILE_LOGGING
ENV LOG_FILE_PATH=$LOG_FILE_PATH
ENV MCQ_TEMPERATURE=$MCQ_TEMPERATURE
ENV MCQ_MAX_TOKENS=$MCQ_MAX_TOKENS
ENV DEBUG_MODE=$DEBUG_MODE
ENV ENABLE_HEALTH_CHECK=$ENABLE_HEALTH_CHECK
ENV HEALTH_CHECK_PATH=$HEALTH_CHECK_PATH

COPY package*.json ./

RUN npm install -g pnpm
RUN pnpm install --prod

COPY . .

EXPOSE ${PORT}

# Healthcheck to ensure the server is running
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget -q --spider http://${HOST}:${PORT}${HEALTH_CHECK_PATH} || exit 1

CMD ["pnpm", "start"]
